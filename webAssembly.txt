什么是 WebAssembly
一种新的编码方式，可以在现代的网络浏览器中运行
它是一种低级的类汇编语言，具有紧凑的二进制格式，可以接近原生的性能运行，并为诸如C / C ++等语言提供一个编译目标，以便它们可以在Web上运行。
它也被设计为可以与JavaScript共存，允许两者一起工作。

为什么需要 WebAssembly
计算机是只认识机器语言的，不认识高级语言的，为了让人们更好的与计算机交流诞生出了更接近人类语言的高级语言，在高级语言中又分为两种解释型和编译型。
编译型语言只需要编译一次之后就可以脱离开发环境变成直接可以被平台(如 windows 系统)执行的代码，执行效率较高

解释型语言在运行程序的时候才翻译，比如 JavaScript，需要在 V8 引擎下才能够直接执行程序，每个语句都是执行的时候才翻译。
这样解释性语言每执行一次就要翻译一次，这样编译和解释都被封装在了一起，效率比较低。

JavaScript 被设计之初就是一种解释性语言，作为网页端脚本语言，起初它的性能并不高，只能用来控制一些动效弹窗，而在之后大前端时代来临，JavaScript 开始承担越来越多的开发角色，诸如前端可视化以及服务端等 ，这时候随之而来的就是性能问题

为了解决这些日渐突出的性能问题，因此 WebAssembly 应运而生，它是例如 C、C++、GO 的一个编译目标，它完全脱离 JavaScript，而是直接将编译好的二进制代码输送到浏览器中执行，理论上可以获得接近 native 的性能。